const express = require('express');
const app = express();
const PORT = process.env.PORT || 3000;

app.use(express.json());

// –•—Ä–∞–Ω–∏–ª–∏—â–∞ (–≤ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–∞–º—è—Ç–∏)
const keys = {};        // { KEY: { createdAt } }
const activeTokens = {}; // { TOKEN: true }
const usedIPs = {};     // [IP] ‚Äî –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ

// –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–¥–Ω–æ—Ä–∞–∑–æ–≤–æ–≥–æ —Ç–æ–∫–µ–Ω–∞ (—Å—Å—ã–ª–∫–∞ –∏–∑ Linkvertise)
app.get('/token', (req, res) => {
  const token = Math.random().toString(36).substring(2, 12).toUpperCase();
  activeTokens[token] = true;

  // –†–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ after —Å —Ç–æ–∫–µ–Ω–æ–º
  res.redirect(`/after?token=${token}`);
});

// –í—ã–¥–∞—á–∞ –∫–ª—é—á–∞ (—Ç–æ–ª—å–∫–æ —Å –æ–¥–Ω–æ—Ä–∞–∑–æ–≤—ã–º —Ç–æ–∫–µ–Ω–æ–º)
app.get('/after', (req, res) => {
  const token = req.query.token;
  if (!token || !activeTokens[token]) {
    return res.status(403).send("‚õî –ù–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω.");
  }

  // –£–¥–∞–ª—è–µ–º —Ç–æ–∫–µ–Ω (–æ–¥–Ω–æ—Ä–∞–∑–æ–≤–æ)
  delete activeTokens[token];

  const newKey = Math.random().toString(36).substring(2, 10).toUpperCase();
  keys[newKey] = { createdAt: Date.now() };

  res.send(`
    <html>
      <head><title>–í–∞—à –∫–ª—é—á</title></head>
      <body style="font-family:sans-serif;text-align:center;margin-top:50px;">
        <h1>‚úÖ –í–∞—à –∫–ª—é—á:</h1>
        <h2 style="color:green;">${newKey}</h2>
        <p>–î–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω 3 —á–∞—Å–∞. –í–≤–µ–¥–∏—Ç–µ –µ–≥–æ –≤ Roblox GUI.</p>
      </body>
    </html>
  `);
});

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–∞ (–∏–∑ Roblox)
app.post('/check', (req, res) => {
  const { key } = req.body;
  if (!key || !keys[key]) {
    return res.json({ success: false, message: '–ù–µ–≤–µ—Ä–Ω—ã–π –∫–ª—é—á' });
  }

  const now = Date.now();
  const created = keys[key].createdAt;

  if (now - created > 3 * 60 * 60 * 1000) {
    delete keys[key];
    return res.json({ success: false, message: '–ö–ª—é—á –∏—Å—Ç—ë–∫' });
  }

  res.json({ success: true });
});

// –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ (–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è)
app.get('/', (req, res) => {
  res.send('üîê KeySystem —Ä–∞–±–æ—Ç–∞–µ—Ç. –ü–µ—Ä–µ–π–¥–∏ –Ω–∞ /token —á–µ—Ä–µ–∑ Linkvertise.');
});

app.listen(PORT, () => {
  console.log(`üöÄ –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
});
